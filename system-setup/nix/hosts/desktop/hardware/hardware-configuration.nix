# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "xhci_pci"
    "ahci"
    "usbhid"
    "usb_storage"
    "sd_mod"
    "sr_mod"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # fileSystems."/" = {
  #   device = "/dev/disk/by-uuid/c0705669-a03c-4104-9b80-f3fad40af6a5";
  #   fsType = "ext4";
  # };

  fileSystems."/" = {
    device = "/dev/mapper/luks-31646094-5231-48d4-bb97-03e3ccee2501";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-31646094-5231-48d4-bb97-03e3ccee2501".device =
    "/dev/disk/by-uuid/31646094-5231-48d4-bb97-03e3ccee2501";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/DCE6-4E85";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  # swapDevices = [
  #   { device = "/dev/disk/by-uuid/09cd6f33-21d0-4a2c-8ca6-d32a87d08e9e"; }
  # ];

  swapDevices = [
    { device = "/dev/mapper/luks-f8bb3e60-c4ed-4046-b493-da44bffd2882"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
