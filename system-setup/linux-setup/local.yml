---
- name: Setup Linux workstation
  hosts: localhost
  connection: local
  gather_facts: true
  become: true

  tasks:
    - name: Record the current logged-in user that invoked the playbook
      ansible.builtin.set_fact:
        invoking_user: "{{ lookup('env', 'USER') }}"
        home_dir: "{{ lookup('env', 'HOME') }}"

    - name: Set the hostname
      ansible.builtin.hostname:
        name: "{{ ansible_distribution | lower }}-workstation"

    - name: Enable password-less sudo
      ansible.builtin.copy:
        dest: "/etc/sudoers.d/{{ invoking_user }}"
        mode: "0440"
        owner: root
        group: root
        content: "{{ invoking_user }} ALL=(ALL) NOPASSWD: ALL"
        validate: "/usr/sbin/visudo -cf %s"
    # - name: Generate SSH keys locally (using a role)
    # - name: Make sure the line Host * AddKeysToAgent yes is present in ~/.ssh/config
    - name: Ensure dnf.conf exists and has a [main] section
      ansible.builtin.lineinfile:
        path: /etc/dnf/dnf.conf
        create: true
        line: "[main]"
        owner: root
        group: root
        mode: '0644'

    - name: Configuring and improving DNF
      ansible.builtin.blockinfile:
        path: /etc/dnf/dnf.conf
        marker: "# {mark} Ansible block: configuring DNF"
        insertafter: '^\[main\]'
        block: |
          fastestmirror=True
          max_parallel_downloads=10
          defaultyes=True
          keepcache=True

    - name: Create directories
      become: false
      ansible.builtin.file:
        path: "{{ home_dir }}/{{ item }}"
        state: directory
        owner: "{{ invoking_user }}"
        group: "{{ invoking_user }}"
        mode: "0755"
      loop:
        - Work
        - Projects

    # - name: Import a task or role for configuring GNOME

    - name: Remove Firefox
      ansible.builtin.package:
        state: absent
        name: firefox

      # TODO: convert this to the yum_repository module instead
    - name: Prepare to install Nushell (add its repository)
      ansible.builtin.copy:
        dest: /etc/yum.repos.d/fury-nushell.repo
        owner: root
        group: root
        mode: '0644'
        content: |
          [gemfury-nushell]
          name=Gemfury Nushell Repo
          baseurl=https://yum.fury.io/nushell/
          enabled=1
          gpgcheck=0
          gpgkey=https://yum.fury.io/nushell/gpg.key

    # TODO: use ansible.builtin.yum_repository in a block to add the repo first then install terra-release
    # TODO: add the rpm fusion repos and the nushell repo this way too (and even others like librewolf and chrome and vscode)
    - name: Add the Terra (terra-release) repository
      ansible.builtin.command:
        cmd: dnf install --nogpgcheck --repofrompath 'terra,https://repos.fyralabs.com/terra$releasever' terra-release -y
        creates: /etc/yum.repos.d/terra.repo

    - name: Install Homebrew - for newer packages, e.g. CLI tools
      become: false
      ansible.builtin.shell:
        cmd: /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        creates: /home/linuxbrew/.linuxbrew/bin/brew
      environment:
        NONINTERACTIVE: "1"

      # TODO: make this into a block with certain things installed with dnf (e.g. ghostty from terra) and others with Homebrew (e.g. up-to-date CLI tools)
    - name: Install essential packages
      ansible.builtin.dnf5:
        update_cache: true
        state: present
        name:
          - stow
          - bat
          # bottom is installed from terra
          # - bottom
          # from Terra
          - ghostty
          # from custom developer repos
          - nushell
    - name: Install essential packages (Homebrew)
      community.general.homebrew:
        state: present
        name:
          - zoxide

    - name: Make sure Nushell is present in the list of shells
      ansible.builtin.lineinfile:
        state: present
        path: /etc/shells
        line: "/usr/bin/nu"

    # TODO: uncomment when it's ready to make Nushell the default on linux workstation
    # - name: "Make Nushell the default interactive shell for {{ invoking_user }}"
    #   ansible.builtin.user:
    #     state: present
    #     name: "{{ invoking_user }}"
    #     shell: /usr/bin/nu

    - name: Symlink dotfiles with GNU Stow
      become: false
      ansible.builtin.shell:
        chdir: "{{ home_dir }}/.dotfiles/Applications"
        cmd: stow -v */
      register: stow_result
      changed_when: ("LINK:" in stow_result.stdout) or ("LINK:" in stow_result.stderr)

    # - name: Copy wallpaper file
    #   ansible.builtin.copy:
    #     src: files/wallpaper.png
    #     dest: /usr/share/background/ansible-wallpaper.png
    #     owner: root
    #     group: root
    #     mode: u+rw

    # - name: Set wallpaper
    #   community.general.dconf:
    #     state: present
    #     key: "/org/gnome/desktop/background/picture-uri"
    #     value: "'file:///usr/share/background/ansible-wallpaper.png'"

        # python3-psutil needs to be installed from apt for the dconf module
        # Install from apt the dconf-cli and then do dconf dump / > settings.txt to see all configs
