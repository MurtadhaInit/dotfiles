# === Prompt-wide configurations ===
add_newline = true      # A blank line before prompt start

format = """
($username$sudo)in ($hostname$env_var)at \
$directory\
$git_branch\
$git_state\
$git_status\
$docker_context\
$package\
$nodejs\
$python\
$conda\
$ruby\
$rust\
$vagrant\
$java\
$fill\
$container $jobs\
$line_break\
$shell\
$shlvl\
$character"""

right_format = """
$cmd_duration"""

# === 1st Line: left hand side ===
[username]
show_always = true
format = "[$user]($style) "
style_user = "yellow"
style_root = "red"

[sudo]
disabled = false
style = "blue"
symbol = "🧙 "
format = "as [$symbol]($style)"

[hostname]
ssh_only = false
# trim_at = ""
format = "[$ssh_symbol$hostname]($style) "
style = "green"

[env_var.STARSHIP_DISTRO]
# Shows a system/distribution icon for the OS
# A corresponding script is sourced in zshrc
format = "[$env_value]($style) "
style = "white"
variable = "STARSHIP_DISTRO"

[directory]
truncation_symbol = "…/"
truncate_to_repo = false
style = "cyan"

[git_branch]
style = "purple"

[git_state]
style = "yellow"

[git_status]
style = "red"

# === 1st Line: left hand side: environment ===
[nodejs]
symbol = "Node "
style = "green"
not_capable_style = "red"

[python]
symbol = "🐍 "
style = "yellow"
# it's possible to show pyenv version

[conda]
ignore_base = false
symbol = "🅒 "
style = "green"

[ruby]
symbol = "💎 "
style = "red"

[rust]
symbol = "🦀 "
style = "red"

[docker_context]
symbol = "🐳 "
style = "blue"

[vagrant]
symbol = "⍱ "
# symbol = "Vargrant"
style = "cyan"

[java]
symbol = "☕ "
style = "red dimmed"

[package]
symbol = "📦 "
style = "208"
# add other relevant modules below

# === 1st Line: right hand side ===
[container]
symbol = "⬢"
style = "red dimmed"

[jobs]
number_threshold = 1
style = "blue"

# === 2nd Line: left hand side ===
[shell]
disabled = false
style = "white italic dimmed"

[shlvl]
disabled = false
format = '[\($shlvl\)]($style) '
style = "yellow dimmed"

[character]
success_symbol = "[>](bold green)"
error_symbol = "[>](bold red)"

# === 2nd Line: right hand side ===
[cmd_duration]
format = "[$duration]($style)"
style = "yellow"

# === Misc. ===
[fill]
symbol = " "

# TODO: investigate whether the colour palette has been applied / how.
# should we leave it to the terminal application to override these colours?

# [palettes.dracula]
# yellow = "#f1fa8c"
# green = "#50fa7b"
# pink = "#ff79c6"
# red = "#ff5555"
# purple = "#bd93f9"
# cyan = "#8be9fd"
# orange = "#ffb86c"

# this assignment has to be placed at the top
# palette = "dracula"     # The selected colour palette