echo '.zshrc stuff are loaded!'
pfetch

# ===== Change ZSH Options =====
# man zshoptions

# ===== Create Aliases =====
alias ls=exa
alias exa='exa -lah --git --group-directories-first --no-time'
alias man=batman
alias grep='grep --color'
alias bbd='brew bundle dump --force --describe --file=~/.dotfiles/Homebrew/Brewfile'  # Update the Brewfile in ~/.dotfiles/Homebrew
# Using parameter expansion, apply the newline-separator option to the lowercase array version of 'path' and redirect the result to standard output using hereword (the default for which we've changed to bat).
alias trail='<<<${(F)path}'
# Don't get accustomed to a more forgivable version of rm if you do server work.
# alias rm=trash

# ===== Add Locations to $path Array =====
# This enforces uniqueness on the array:
# Duplicate items added to the right are removed,
# while duplicate items added to the left are kept and
# the equivalents on the right are removed.
typeset -U path
path=(
  "$VOLTA_HOME/bin" # Volta shims
  $path
  "$(brew --prefix openjdk)/bin" # Homebrew JDK
  "/Applications/Visual Studio Code.app/Contents/Resources/app/bin" # VSCode
  "$HOME/Library/Application Support/JetBrains/Toolbox/scripts" # JetBrains
  "$HOME/.local/bin" # pipx
)

# ===== Handy Functions =====
# make a directory and then cd into it
# TODO: load it lazily? autoload -Uz mkcd
function mkcd() {
  mkdir -p "$@" && cd "$_";
}

# ===== Command Completion =====
# case insensitive path completion
zstyle ':completion:*' matcher-list 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]} l:|=* r:|=*'
# place additional command completion scripts here
fpath+=~/.zfunc
# load the zsh command completion system
autoload -Uz compinit && compinit
# load bash completions since they are compatible with zsh
# so far, this is only used for pipx completions
autoload -U bashcompinit && bashcompinit
# pipx autocompletion
eval "$(register-python-argcomplete pipx)"

# The default Python interpreter to use by pipx
# TODO: Replace with more perm one
export PIPX_DEFAULT_PYTHON="$(pyenv which python)"

# ===== Customise Prompt(s) =====
# Get system/distro logo for Starship
[ -f $HOME/.config/Starship/system_icon.zsh ] && source $HOME/.config/Starship/system_icon.zsh
# Load Starship
eval "$(starship init zsh)"

# ===== ZSH Plugins / CLI Tools =====
# Load fzf configs: fzf setup (if needed), auto-completion and key bindings
source $HOME/.config/fzf/.fzf.zsh
# Load zoxide (cd replacement)
eval "$(zoxide init zsh)"
# Load zsh-autosuggestions
source $(brew --prefix)/share/zsh-autosuggestions/zsh-autosuggestions.zsh
# ZSH Syntax Highlighting: it has to be the last sourced file in .zshrc
source $(brew --prefix)/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# NOTE: These fzf config files are generated by the install script,
# which is located at: $(brew --prefix)/opt/fzf/install
# They are originally placed in the home directory.
# No need to execute the install script again after
# installation of fzf with Homebrew.

# NOTE: That line that loads zoxide must be added after compinit
# is called. A rebuild of the cache might be required by running
# rm ~/.zcompdump*; compinit

# Java
# export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk-18.0.1.1.jdk/Contents/Home
# export PATH=$JAVA_HOME/bin:$PATH

# For the system Java wrappers to find this JDK, symlink it with
# sudo ln -sfn /opt/homebrew/opt/openjdk/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk.jdk

# For compilers to find openjdk you may need to set:
# export CPPFLAGS="-I/opt/homebrew/opt/openjdk/include"


